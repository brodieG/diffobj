
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source(file.path('_helper', 'init.R'))
> 
> rdsf <- function(x)
+   readRDS(file.path("testthat", "helper", "diffStr", sprintf("%s.rds", x)))
> txtf <- function(x)
+   readLines(file.path("testthat", "helper", "diffStr", sprintf("%s.txt", x)))
> 
> # - lm models ------------------------------------------------------------------
> 
> # formula display changed
> if(R.Version()$major >= 3 && R.Version()$minor >= "3.1")
+   all.equal(as.character(diffStr(mdl1, mdl2)), rdsf(100))
> # Too strict a line limit, can't get under
> all.equal(
+   as.character(diffStr(mdl1[7], mdl2[7], line.limit=10)), rdsf(200)
+ )
[1] TRUE
> # Now we can get under
> all.equal(
+   as.character(diffStr(mdl1[7], mdl2[7], line.limit=15)), rdsf(300)
+ )
[1] TRUE
> 
> # - Simple structure -----------------------------------------------------------
> #
> # Character types
> 
> all.equal(as.character(diffStr(iris.c, iris.s)), rdsf(400))
[1] TRUE
> 
> # - Strict width ---------------------------------------------------------------
> # formula display changed
> if(
+   R.Version()$major >= 3 && R.Version()$minor >= "3.1" || R.Version()$major >3
+ ) {
+   c(
+     all.equal(
+       as.character(
+         diffStr(mdl1, mdl2, extra=list(strict.width="wrap"), line.limit=30)
+       ),
+       rdsf(500)
+     ),
+     all.equal(
+       as.character(
+         diffStr(mdl1, mdl2, extra=list(strict.width="cut"), line.limit=30)
+       ),
+       rdsf(550)
+   ) )
+ }
[1] TRUE TRUE
> # - max.diffs ------------------------------------------------------------------
> 
> diffStr(iris, mtcars, max.diffs=2) # warn: "Exceeded diff limit"
[33m<[39m [33mstr(iris)[39m                              [34m>[39m [34mstr(mtcars)[39m                          
[36m@@ 1,6 @@                              [39m  [36m@@ 1,12 @@                             [39m
[33m<[39m [90m[39m'data.frame':   [33m150[39m [33mobs.[39m [33mof[39m  [33m5[39m [33mvariab[39m[33m[39m[90m[39m  [34m>[39m [90m[39m'data.frame':   [34m32[39m [34mobs.[39m [34mof[39m  [34m11[39m [34mvariab[39m[90m[39m
[33m:[39m [90m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33mles[39m[33m:[39m[90m[39m                                   [34m:[39m [90m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34mles[39m:[90m[39m                                 
[33m<[39m [90m $ [39m[33mSepal.Length[39m: [33mnum[39m  [33m5.1[39m [33m4.9[39m [33m4.7[39m [33m4.6[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[90m[39m  [34m>[39m [90m $ [39m[34mmpg[39m [34m:[39m [34mnum[39m  [34m21[39m [34m21[39m [34m22.8[39m [34m21.4[39m [34m18.7[39m [34m18[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[90m[39m
[33m:[39m [90m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m [33m5[39m [33m5.4[39m [33m4.6[39m [33m5[39m [33m4.4[39m [33m4.9[39m [33m...[39m[90m[39m               [34m:[39m [90m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m.1[39m [34m14.3[39m [34m24.4[39m [34m22.8[39m [34m19.2[39m [34m...[39m[90m[39m           
[33m<[39m [90m $ [39m[33mSepal.Width[39m [33m:[39m [33mnum[39m  [33m3.5[39m [33m3[39m [33m3.2[39m [33m3.1[39m [33m3[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[90m[39m  [34m>[39m [90m $ [39m[34mcyl[39m [34m:[39m [34mnum[39m  [34m6[39m [34m6[39m [34m4[39m [34m6[39m [34m8[39m [34m6[39m [34m8[39m [34m4[39m [34m4[39m [34m6[39m [34m...[39m[90m[39m
[33m:[39m [90m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m.6[39m [33m3.9[39m [33m3.4[39m [33m3.4[39m [33m2.9[39m [33m3.1[39m [33m...[39m[90m[39m             [90m~[39m                                      
[33m<[39m [90m $ [39m[33mPetal.Length[39m[33m:[39m [33mnum[39m  [33m1.4[39m [33m1.4[39m [33m1.3[39m [33m1.5[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[90m[39m  [34m>[39m [90m $ [39m[34mdisp[39m[34m:[39m [34mnum[39m  [34m160[39m [34m160[39m [34m108[39m [34m258[39m [34m360[39m [34m...[39m[90m[39m
[33m:[39m [90m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m [33m1.4[39m [33m1.7[39m [33m1.4[39m [33m1.5[39m [33m1.4[39m [33m1.5[39m [33m...[39m[90m[39m           [90m~[39m                                      
[33m<[39m [90m $ [39m[33mPetal.Width[39m [33m:[39m [33mnum[39m  [33m0.2[39m [33m0.2[39m [33m0.2[39m [33m0.2[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[90m[39m  [34m>[39m [90m $ [39m[34mhp[39m  [34m:[39m [34mnum[39m  [34m110[39m [34m110[39m [34m93[39m [34m110[39m [34m175[39m [34m105[39m [34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[90m[39m
[33m:[39m [90m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m [33m0.2[39m [33m0.4[39m [33m0.3[39m [33m0.2[39m [33m0.2[39m [33m0.1[39m [33m...[39m[90m[39m           [34m:[39m [90m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m245[39m [34m62[39m [34m95[39m [34m123[39m [34m...[39m[90m[39m                    
[33m<[39m [90m $ [39m[33mSpecies[39m     [33m:[39m [33mFactor[39m [33mw[39m[33m/[39m [33m3[39m [33mlevels[39m [33m"[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[90m[39m  [34m>[39m [90m $ [39m[34mdrat[39m[34m:[39m [34mnum[39m  [34m3.9[39m [34m3.9[39m [34m3.85[39m [34m3.08[39m [34m3.15[39m [34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[90m[39m
[33m:[39m [90m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33msetosa"[39m[33m,[39m[33m"versicolor"[39m[33m,..:[39m [33m1[39m [33m1[39m [33m1[39m [33m1[39m [33m1[39m [33m1[39m [33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[90m[39m  [34m:[39m [90m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m2.76[39m [34m3.21[39m [34m3.69[39m [34m3.92[39m [34m3.92[39m [34m...[39m[90m[39m         
[33m:[39m [90m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m[39m[33m1[39m [33m1[39m [33m1[39m [33m1[39m [33m...[39m[90m[39m                            [90m~[39m                                      
[90m~[39m                                        [34m>[39m [90m $ [39m[34mwt[39m  [34m:[39m [34mnum[39m  [34m2.62[39m [34m2.88[39m [34m2.32[39m [34m3.21[39m [34m3.4[39m[34m[39m[90m[39m
[90m~[39m                                        [34m:[39m [90m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m4[39m [34m...[39m[90m[39m                                
[90m~[39m                                        [34m>[39m [90m $ [39m[34mqsec[39m[34m:[39m [34mnum[39m  [34m16.5[39m [34m17[39m [34m18.6[39m [34m19.4[39m [34m17[39m [34m..[39m[90m[39m
[90m~[39m                                        [34m:[39m [90m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m[39m[34m.[39m[90m[39m                                    
[90m~[39m                                        [34m>[39m [90m $ [39m[34mvs[39m  [34m:[39m [34mnum[39m  [34m0[39m [34m0[39m [34m1[39m [34m1[39m [34m0[39m [34m1[39m [34m0[39m [34m1[39m [34m1[39m [34m1[39m [34m...[39m[90m[39m
[90m~[39m                                        [34m>[39m [90m $ [39m[34mam[39m  [34m:[39m [34mnum[39m  [34m1[39m [34m1[39m [34m1[39m [34m0[39m [34m0[39m [34m0[39m [34m0[39m [34m0[39m [34m0[39m [34m0[39m [34m...[39m[90m[39m
[90m~[39m                                        [34m>[39m [90m $ [39m[34mgear[39m[34m:[39m [34mnum[39m  [34m4[39m [34m4[39m [34m4[39m [34m3[39m [34m3[39m [34m3[39m [34m3[39m [34m4[39m [34m4[39m [34m4[39m [34m...[39m[90m[39m
[90m~[39m                                        [34m>[39m [90m $ [39m[34mcarb[39m[34m:[39m [34mnum[39m  [34m4[39m [34m4[39m [34m1[39m [34m1[39m [34m2[39m [34m1[39m [34m4[39m [34m2[39m [34m2[39m [34m4[39m [34m...[39m[90m[39m
Warning message:
Exceeded diff limit during diff computation (17 vs. 2 allowed); overall diff is likely not optimal 
> 
> # - max.level ------------------------------------------------------------------
> 
> all.equal(
+   as.character(diffStr(mdl1[7], mdl2[7], extra=list(max.level="auto"))),
+   rdsf(600)
+ )
[1] TRUE
> all.equal(
+   as.character(diffStr(mdl1[7], mdl2[7], extra=list(max.level=2))),
+   rdsf(700)
+ )
[1] TRUE
> # Has a difference, but can't get under; the second is just for reference
> 
> lst.1 <- lst.2 <- lst.3 <- list(a=list(b=list(c=list(d=list(e=list(25))))))
> names(lst.2) <- "A"
> 
> all.equal(
+   as.character(diffStr(lst.1, lst.2, line.limit=2)), rdsf(800)
+ )
[1] TRUE
> all.equal(
+   as.character(diffStr(lst.1, lst.2, line.limit=2)), rdsf(900)
+ )
[1] TRUE
> # Test that initial run shows difference, but too big, but next one down
> # doesn't so have to increase level
> 
> names(lst.3$a$b$c$d) <- "E"
> all.equal(
+   as.character(diffStr(lst.1, lst.3, line.limit=6)), rdsf(1000)
+ )
[1] TRUE
> 
> # - No visible differences -----------------------------------------------------
> 
> all.equal(
+   as.character(diffStr(1:100, c(1:99, 101L))), rdsf(1100)
+ )
[1] TRUE
> 
> # - Quoted Objects -------------------------------------------------------------
> 
> all.equal(
+   as.character(diffStr(quote(zz + 1), quote(zz + 3))),
+   structure(
+     c("\033[33m<\033[39m \033[33mstr(quote(zz +..\033[39m  \033[34m>\033[39m \033[34mstr(quote(zz +..\033[39m", "\033[36m@@ 1 @@           \033[39m  \033[36m@@ 1 @@           \033[39m", "\033[33m<\033[39m \033[90m\033[39m language zz + \033[33m1\033[39m\033[90m\033[39m  \033[34m>\033[39m \033[90m\033[39m language zz + \033[34m3\033[39m\033[90m\033[39m"
+     ), len = 3L
+ ) )
[1] TRUE
> 
> all.equal(
+   as.character(diffStr(quote(x), quote(y))),
+   structure(c("\033[33m<\033[39m \033[33mstr(quo..\033[39m  \033[34m>\033[39m \033[34mstr(quo..\033[39m", "\033[36m@@ 1 @@    \033[39m  \033[36m@@ 1 @@    \033[39m", "\033[33m<\033[39m \033[90m\033[39m symbol \033[33mx\033[39m\033[90m\033[39m  \033[34m>\033[39m \033[90m\033[39m symbol \033[34my\033[39m\033[90m\033[39m"), len = 3L)
+ )
[1] TRUE
> 
> # - Spaces with punctuation ----------------------------------------------------
> 
> all.equal(
+   capture.output(show(diffStr(list(a=1), list(a=1, cabera=3), format='raw'))),
+   txtf(100)
+ )
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  3.695   0.293   4.144 
